apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'


android {
    signingConfigs {
        config {
            keyAlias 'keystore'
            keyPassword 'Fernando05'
            storeFile file('/Users/benjaminlewis/Desktop/GitHub/Dollar-Scholar/keystore.jks')
            storePassword 'Fernando05'
        }
    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.scholar.dollar.android.dollarscholarbenlewis"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 10
        versionName "1.0.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        signingConfig signingConfigs.config
    }
    buildTypes {
        debug {
            resValue "string", "places_api_key", MY_API_KEY
            signingConfig signingConfigs.config
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            resValue "string", "places_api_key", MY_API_KEY
        }
    }
    buildTypes.each {
        it.buildConfigField 'String', 'COLLEGE_SCORECARD_API_KEY', MY_API_KEY
        it.buildConfigField 'String', 'NEARBY_API_KEY', MY_API_KEY
    }
    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
        }
        prod {

        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if(variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    apt "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"

    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    compile "com.google.android.gms:play-services-auth:$rootProject.playServicesVersion"
    compile "com.google.android.gms:play-services-places:$rootProject.playServicesVersion"
    compile "com.google.firebase:firebase-auth:$rootProject.playServicesVersion"
    compile "com.google.firebase:firebase-database:$rootProject.playServicesVersion"
    compile 'com.firebaseui:firebase-ui-auth:0.6.0'
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile "com.facebook.stetho:stetho:$rootProject.stethoVersion"
    compile "com.facebook.stetho:stetho-okhttp:$rootProject.stethoVersion"
    compile "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile "com.google.firebase:firebase-core:$rootProject.playServicesVersion"
    compile 'com.github.PhilJay:MPAndroidChart:v3.0.0'
    compile "com.google.firebase:firebase-storage:$rootProject.playServicesVersion"
    compile "com.google.firebase:firebase-messaging:$rootProject.playServicesVersion"
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-beta4'

    // Dependencies for local unit tests
    testCompile "junit:junit:$rootProject.ext.junitVersion"
    testCompile "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
    testCompile "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"
    testCompile "org.powermock:powermock-module-junit4:$rootProject.ext.powerMockito"
    testCompile "org.powermock:powermock-api-mockito:$rootProject.ext.powerMockito"

    // Android Testing Support Library's runner and rules
    androidTestCompile "com.android.support.test:runner:$rootProject.ext.runnerVersion"
    androidTestCompile "com.android.support.test:rules:$rootProject.ext.rulesVersion"

    // Espresso UI Testing dependencies.
    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$rootProject.ext.espressoVersion"
}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
}

configurations.compile.dependencies.each { compileDependency ->
    println "Excluding compile dependency: ${compileDependency.getName()}"
    configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
        configurations.androidTestCompile.exclude module: "${compileDependency.getName()}"
    }
}

apply plugin: 'com.google.gms.google-services'